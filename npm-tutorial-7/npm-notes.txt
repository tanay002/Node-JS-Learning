npm init

it asks several questions like the package name, version, description, 
entry point, keyword, author, etc. When we execute this, there is a new file 
called package.json inside the tut69 directory.

NPM init has initialized this folder in terms of a node package.
 Now when we install any other dependency, it automatically gets 
added to this package

npm install slugify (he package.json file will automatically get updated)
npm install express
npm uninstall express


we can install or uninstall any of the packages from the directory.
 Besides all these things, we also get another folder called node.
modules. It is a folder containing all the modules related to our 
project. If by mistake this folder gets deleted, we can recover 
it back by again installing npm by writing npm install.

npm install slugify@1.3.5 (If we want to install custome version)

or
npm i
------------------------------------------------------------
Dev Dependencies

There are times when we want to install the packages only for 
development purposes, not for production purposes. In that case, 
dev dependencies are useful

npm install nodemon --save-dev
npm install nodemon --global

version 1.0.0 means (major.minor.bug)
                             minor means functions added
                              bug means bug resolved
---------------------------------------------------------------
If we want to install custome or updated module so we make changes
in package.json

 "author": "Tanay",
  "license": "ISC",
  "dependencies": {
    "slugify": "~1.5.3"             ~
  },
  "devDependencies": {
    "nodemon": ">2.0.7"                 >
  }
-----------------------------------------------
chech version

npm view slugify version